# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc


# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files
*.tfvars

# Exclude override files as they are usually used to override resources locally and not meant to be kept in version control
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include tfplan files
*.tfplan

# Ignore any `.terraformrc` file
.terraformrc
terraform.rc

# Ignore any secret files
*.key
*.pem
*.p12
*.cer
*.crt

# Backup files
*.backup
*.bak

# Specific OS files
# macOS
.DS_Store

# Windows
Thumbs.db
desktop.ini

# Linux
*~

# Ignore the private key file
*.pem